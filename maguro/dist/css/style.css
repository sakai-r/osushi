@charset "UTF-8";
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     * 1. Add the correct display in IE.
     */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     * 1. Show the overflow in Edge.
     */
button,
input {
  /* 1 */
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
     * Remove the inner border and padding in Firefox.
     */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
     * Restore the focus styles unset by the previous rule.
     */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
     * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
     */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in IE 9-.
     * 1. Add the correct display in Edge, IE, and Firefox.
     */
details,
menu {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

address, caption, cite, code, dfn, em, strong, th, var {
  font-style: normal;
  font-weight: normal; }

/* color */
/* size */
/* famiry */
html {
  width: 100%;
  height: 100%;
  font-size: 62.5%;
  min-width: 980px; }

body {
  width: 100%;
  font-family: Helvetica Neue, "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "メイリオ", Meiryo, "ＭＳ Ｐゴシック", "MS PGothic", Arial, Verdana, sans-serif;
  font-size: 1.6rem;
  line-height: 1.5; }

ol, ul {
  list-style: none;
  margin: 0;
  padding: 0; }

a {
  text-decoration: none; }

button {
  background-color: transparent;
  border: none;
  cursor: pointer;
  outline: none;
  padding: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

/* リンク */
.p-text__link {
  color: #0079c2; }

/* コンテンツ全体 */
.contentsSec__min {
  margin: 40px auto 0;
  overflow: hidden;
  width: 860px; }

.l-ProductContents {
  margin: 40px auto 0;
  width: 960px; }

/* 見出し */
.contentsSec__inner header {
  text-align: center;
  margin: 40px 0; }
  .contentsSec__inner header .c-heading__translation {
    font-family: 'Montserrat', sans-serif;
    color: #fff100;
    font-size: 1.3rem; }
  .contentsSec__inner header .c-heading__title {
    margin: 15px 0 40px 0;
    color: #fff; }

.contentsSec__inner .ariaItem__enjoy header .c-heading__translation, .contentsSec__inner .ariaItem__enjoy header .c-heading__title, .contentsSec__inner .ariaItem__delivery header .c-heading__translation, .contentsSec__inner .ariaItem__delivery header .c-heading__title {
  color: #000; }

/* コンテンツ背景 */
.contentsSec__inner .ariaItem__sale {
  background: #0079c2; }

.contentsSec__inner .ariaItem__comingsoon {
  background: #005fb1; }

.contentsSec__inner .riaItem__enjoy {
  width: 100%;
  background: #ccc;
  -webkit-transform: rotate(3deg);
          transform: rotate(3deg); }

/* 商品セット */
.l-ProductContents .productItem__box {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  overflow: hidden;
  width: 960px; }
  .l-ProductContents .productItem__box li {
    width: 300px;
    background: #fff;
    margin: 0 30px 30px 0; }
    .l-ProductContents .productItem__box li:nth-child(3n) {
      margin-right: 0; }
    .l-ProductContents .productItem__box li img {
      width: 300px;
      display: block; }
    .l-ProductContents .productItem__box li .product__label {
      background: #000;
      color: #fff;
      padding: 5px 8px 5px 10px;
      font-size: 1.4rem;
      position: relative; }
      .l-ProductContents .productItem__box li .product__label:after {
        display: block;
        content: "";
        position: absolute;
        top: 0;
        left: 49px;
        border-top: 0px solid #000;
        border-right: 10px solid transparent;
        border-bottom: 0px solid transparent;
        border-left: 1px solid transparent; }
    .l-ProductContents .productItem__box li .colorNew__label {
      background: #009bf9; }
      .l-ProductContents .productItem__box li .colorNew__label:after {
        border-top: 26px solid #009bf9; }
    .l-ProductContents .productItem__box li .productItem__title {
      margin: 14px 20px  0 20px;
      height: 40px; }
    .l-ProductContents .productItem__box li .data__title span {
      display: inline-block;
      border: 1px solid #222222;
      font-size: 1.2rem;
      margin: 0 14px 0 20px;
      padding: 0 4px 0 6px; }
    .l-ProductContents .productItem__box li .data__title time {
      font-size: 14px; }

/* 6コマ漫画 */
.ariaItem__enjoy ul {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
          justify-content: space-between;
  width: 960px;
  margin: 0 auto; }
  .ariaItem__enjoy ul li img {
    width: 300px;
    margin-bottom: 25px; }

/* フッターエリア */
.l-footer {
  background: #222222;
  padding-top: 40px;
  padding-bottom: 40px; }

.ariaItem__news {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
          justify-content: space-between;
  width: 960px;
  margin: 0 auto; }
  .ariaItem__news .l-NewsContents {
    width: 460px; }
    .ariaItem__news .l-NewsContents .c-heading__translation, .ariaItem__news .l-NewsContents .c-heading__title {
      color: #fff;
      text-align: center; }
    .ariaItem__news .l-NewsContents a {
      color: #41abd9; }
    .ariaItem__news .l-NewsContents ul {
      font-size: 1.2rem; }
    .ariaItem__news .l-NewsContents li {
      display: -webkit-box;
      display: flex;
      border-bottom: 1px #666 solid; }
      .ariaItem__news .l-NewsContents li time {
        color: #fff; }
    .ariaItem__news .l-NewsContents .NewsContents__link {
      display: inline-block;
      float: right; }

/* ナビゲーション */
.nav__inner .listMenu__item {
  background: #222;
  height: 40px;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: end;
          justify-content: flex-end;
  -webkit-box-align: center;
          align-items: center; }
  .nav__inner .listMenu__item a {
    color: #fff;
    font-size: 1.4rem;
    margin-right: 20px;
    padding: 10px;
    border-radius: 3px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px; }

/* 絞り込み機能 */
.contentsSec__inner .m-listRefine .refine__text {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center; }
  .contentsSec__inner .m-listRefine .refine__text li {
    margin: 0 1rem; }
    .contentsSec__inner .m-listRefine .refine__text li button {
      display: inline-block;
      width: 140px;
      padding: 5px 0;
      text-align: center;
      border: 2px solid #000;
      border-radius: 3px; }

/* TOPページ：メインビジュアル */
.mainVisual__item {
  width: 100%;
  height: 100%;
  line-height: 0;
  margin-bottom: 13px; }
  .mainVisual__item a {
    display: block; }

.Visual__sizeL img {
  width: 860px;
  height: 448px; }

.Visual__sizeM, .Visual__sizeM img {
  width: 570px;
  height: 300px;
  float: left; }

.Visual__sizeS, .Visual__sizeS img {
  width: 274px;
  height: 144px;
  float: right; }

/* TOPページ：お届けについて */
.ariaItem__delivery .c-text__sentence {
  text-align: center;
  font-size: 1.2rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
